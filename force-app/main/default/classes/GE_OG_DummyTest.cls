@isTest
public class GE_OG_DummyTest {
    /*
    public static testMethod void testRCCntrl(){ 
        RiskChecklistController_GE_OG rcCntlr = new RiskChecklistController_GE_OG();
        List<Risk_Checklist_Category_ge_og__c > newRccList=null;
        Map<Id,Risk_Checklist_Category_ge_og__c > oldRccMap =null;
        rcCntlr.assignDefaultSupported(newRccList, oldRccMap);
        
        Map<Id,Id> rccOpptyMap=null;
        rcCntlr.assignReviewerToRiskChecklistCategory(newRccList, oldRccMap, rccOpptyMap);
        
        List<Checklist_Category_ge_og__c> riskChecklistCategoryList=null;
        List<Deal_Desk_ge_og__c> newUpdDealDesk=null;
        Map<Id,Id> currentAndInactiveDDMap=null;
        Map<String,Risk_Checklist_Deviation_ge_og__c> existingRccOpptyDeviationMap=null;
        Map<Id,Checklist_Deviation_ge_og__c> checklistWithL0DeviationMap=null;
         Map<String,List<Checklist_ge_og__c>> checklistCategoryMap=null;
        rcCntlr.createRiskCheckListCategory(riskChecklistCategoryList, newUpdDealDesk, currentAndInactiveDDMap, 
                                            existingRccOpptyDeviationMap, checklistWithL0DeviationMap);
        
        rcCntlr.createRiskCheckListDeviation(newRccList, checklistCategoryMap, currentAndInactiveDDMap,
                                             existingRccOpptyDeviationMap, checklistWithL0DeviationMap);
        Map<id,List<Risk_Checklist_Deviation_ge_og__c>> ddRiskDeviationMap=null;
        List<Risk_Checklist_Category_ge_og__c> rccList=null;
        rcCntlr.updateRiskCheckListDeviation(ddRiskDeviationMap, rccList);
    }
    
    public static testMethod void testRCDHndrl(){
    	RiskChecklistDeviationTriggerHandler rcdHandler = new RiskChecklistDeviationTriggerHandler();
        List<Risk_Checklist_Deviation_ge_og__c> newListDeviation=null;
        Map<Id,Risk_Checklist_Deviation_ge_og__c> oldMapDeviation=null;
        rcdHandler.updateDeviationText(newListDeviation, oldMapDeviation);
        
    }
    
    public static testMethod void testOpptyDispose(){
        OpportunityDisposedFunctionality opptyDispose= new OpportunityDisposedFunctionality();
        List<Opportunity>disposedOpportunities=null;
        opptyDispose.removeRefrences(disposedOpportunities);
    }
    
    public static testMethod void testddAprover(){
        DealDeskApprover_GE_OG ddAprover = new DealDeskApprover_GE_OG();
        Deal_Desk_ge_og__c ddObj = null;
        ddAprover.ApproveRecord(ddObj);
        ddAprover.RejectRecord(ddObj);
        ddAprover.SubmitRecord(ddObj);
    }
    
    public static testMethod void testRC_PDF(){
        RiskChecklistPDF_GE_OG rcPDF = new RiskChecklistPDF_GE_OG();
        rcPDF.GeneratePDF();
    }
    
    public static testMethod void testRCCHndlr(){
        RiskChecklistCategoryHandler_GE_OG rccHandlr = new RiskChecklistCategoryHandler_GE_OG();
        List<Risk_Checklist_Category_ge_og__c > newRccList=null;
        Map<Id,Risk_Checklist_Category_ge_og__c > oldRccMap=null;
        rccHandlr.afterUpdateFunctionality(newRccList, oldRccMap);
        rccHandlr.beforeUpdateFunctionality(newRccList, oldRccMap);
    }
  */
}